Challenge 1: "Generate a longest sequence of the following "English Pokemon"
    names where each name starts with the last letter of the previous name:

        audino bagon baltoy banette bidoof braviary bronzor carracosta
        charmeleon cresselia croagunk darmanitan deino emboar emolga
        exeggcute gabite girafarig gulpin haxorus heatmor heatran ivysaur
        jellicent jumpluff kangaskhan kricketune landorus ledyba loudred
        lumineon lunatone machamp magnezone mamoswine nosepass petilil
        pidgeotto pikachu pinsir poliwrath poochyena porygon2 porygonz
        registeel relicanth remoraid rufflet sableye scolipede scrafty
        seaking sealeo silcoon simisear snivy snorlax spoink starly
        tirtouga trapinch treecko tyrogue vigoroth vulpix wailord
        wartortle whismur wingull yamask"

My notes: Clearly defined, nice, potentially tricky, let's have a go -
        and try some optimization experiments.


Challenge 2: "Create script to implement Chaocipher. Please checkout
https://en.wikipedia.org/wiki/Chaocipher for more information."

My notes: That wikipedia page is very light on details, but refers you
to the following PDF document for a full explanation:

http://www.chaocipher.com/ActualChaocipher/Chaocipher-Revealed-Algorithm.pdf

reading that, it gives a clear description of the algorithm. but then
shows you the canonical solution - in beautifully clean Perl 5. So, umm,
what is the point in me doing it again?
I already solved this in one of the other prime-based questions?
