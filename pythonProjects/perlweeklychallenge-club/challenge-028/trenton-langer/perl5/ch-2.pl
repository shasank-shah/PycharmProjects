#!/mu/bin/perl -w
use strict;
no warnings;



##################################################################################################################################################################
##################################################################################################################################################################
## Authorship
##################################################################################################################################################################
##################################################################################################################################################################
### Project
############# Perl Weekly Challenge - 028
### Name
############# ch-2.pl
### Author
############# Trenton Langer
### Creation Date
############# 20191005
### Description
############# Clock Display



#####################################################################################################################
#####################################################################################################################
## PWC - 028 - Task 2
#####################################################################################################################
#####################################################################################################################
#Write a script to display Digital Clock. 
#Feel free to be as creative as you can when displaying digits. 
#We expect bare minimum something like "14:10:11".

    

#####################################################################################################################
#####################################################################################################################
## Solution
#####################################################################################################################
#####################################################################################################################
tie my $clock, 'Clock';
while(1)
{
    $clock = get_time();
    sleep(1);
}



#####################################################################################################################
#####################################################################################################################
## Subs
#####################################################################################################################
#####################################################################################################################
sub get_time
{
    my ($sec,$min,$hour,$dayOfMonth,$month,$year,$dayOfWeek,$dayOfYear,$isDayLightSavings) = localtime;
    if(length($hour)       == 1){$hour         = "0$hour";}
    if(length($min)        == 1){$min          = "0$min";}
    if(length($sec)        == 1){$sec          = "0$sec";}
    return "$hour:$min:$sec";
}

package Clock;
sub TIESCALAR # obj creation (tie $scalar, 'NAME', args)
{
    my $class = shift;

    my $self;
    $self->{_SCALAR};
    $| = 1;
        
    return bless $self, $class;
}
sub FETCH # retrieve values
{
    my $self = shift;
    return $self->{_SCALAR};
}
sub STORE # stores values
{
    my $self = shift;
    my $input = shift; 
    my $len = length($self->{_SCALAR}); 
    my $del = "\b"x$len." "x$len."\b"x$len; 
    print $del; 
    print $input; 
    $self->{_SCALAR} = $input;
}
sub UNTIE # indicate no longer need tied variable (untie $@%var;)
{
    my $self = shift;
    print "\r\n"; 
    $| = 0;
}




