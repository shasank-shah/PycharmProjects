=pod

=encoding utf8

=head1 #1 First square with five distinct digits

=over 4

Write a script that finds the first square number that has at least 5 distinct
digits. This was proposed by Laurent Rosenfeld.

=back

This is easily solvable by splitting the square digits and tucking them in a
hash to drop duplicates. Then we only have to see if there are five keys in the
hash.

=head1 #2 Ranking

=over 4

Write a script to perform different types of ranking as described below:

=over 4

=item 1. Standard Ranking (1224): Items that compare equal receive the same ranking number, and then a gap is left in the ranking numbers.
=item 2. Modified Ranking (1334): It is done by leaving the gaps in the ranking numbers before the sets of equal-ranking items.
=item 3. Dense Ranking    (1223): Items that compare equally receive the same ranking number, and the next item(s) receive the immediately following ranking number.

=back

For more information, please refer to L<wiki page|https://en.wikipedia.org/wiki/Ranking>.

=back

This problem isn't very well defined because one doesn't know which type of
items should being ranked. Numbers, strings, generic objects?

I'm assuming that we're ranking numbers which are passed as command line
arguments to the script. Like this:

    $ ./ch-2.pl 8 4 2 4 4 3 3 4 5 7 8 6 5 3 2 1 3
    Standard Ranking: 1 2 2 4 4 4 4 8 8 8 8 12 12 14 15 16 16
    Modified Ranking: 1 3 3 7 7 7 7 11 11 11 11 13 13 14 15 17 17
       Dense Ranking: 1 2 2 3 3 3 3 4 4 4 4 5 5 6 7 8 8
