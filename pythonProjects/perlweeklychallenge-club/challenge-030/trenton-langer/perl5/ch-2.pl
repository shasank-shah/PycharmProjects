#!/mu/bin/perl -w
use strict;
no warnings;


#####################################################################################################################
#####################################################################################################################
## Authorship
#####################################################################################################################
#####################################################################################################################
### Project
############# Perl Weekly Challenge - 030
### Name
############# ch-2.pl
### Author
############# Trenton Langer
### Creation Date
############# 20191014
### Description
############# Series of numbers equal to 12



#####################################################################################################################
#####################################################################################################################
## PWC - 030 - Task 2
#####################################################################################################################
#####################################################################################################################
#Write a script to print all possible series of 3 positive numbers, 
#where in each series at least one of the number is even and sum of the three numbers is always 12. 

#For example, 3,4,5.



#####################################################################################################################
#####################################################################################################################
## Solution
#####################################################################################################################
#####################################################################################################################
my %mem = ();
print "3 Number Series that equal 12, with at least one even:\n";
foreach my $i (1..10)
{
    my $remainder = 12 - $i;
    my @options = @{break($remainder,$i)};  
    foreach my $option (@options)
    {
        print "\t$i,\t$option->[0],\t$option->[1]\n" if($i % 2 == 0 || $option->[0] % 2 == 0 || $option->[1] % 2 == 0);
    }  
}



#####################################################################################################################
#####################################################################################################################
## Subs
#####################################################################################################################
#####################################################################################################################
sub break
{
    my $num     = shift;
    my $start   = shift;
    my @rtn = ();
    return \@rtn unless($num > $start);
    foreach my $i ($start..$num-1)
    {
        my $dif = $num - $i;
        last if($dif < $i);
        push @rtn, [$i, $dif];
    }
    return \@rtn;
}




