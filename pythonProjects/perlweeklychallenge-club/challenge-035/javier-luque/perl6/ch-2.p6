# Test: perl6 ch1.p6 'string to test' | perl6 ch2.p6
use v6.d;

sub MAIN () {
    for $*IN.lines() -> $line {
        say decode($line);
    }
}

sub decode (Str $message) {
    my $decoded_message = '';

    # Some definitions
    my $char_gap = '0' x 3;
    my $word_gap = '0' x 7;

    # I generated this lookup table using a modified perl5 script
    my %morse = (
    '1010111011101'     => '!', '1011101110111011101' => "'",
    '1011101011101'     => '+', '1110111010101110111' => ',',
    '111010101010111'   => '-', '10111010111010111'   => '.',
    '1110101010111'     => '/', '1110111011101110111' => '0',
    '10111011101110111' => '1', '101011101110111'     => '2',
    '1010101110111'     => '3', '10101010111'         => '4',
    '101010101'         => '5', '11101010101'         => '6',
    '1110111010101'     => '7', '111011101110101'     => '8',
    '11101110111011101' => '9', '11101110111010101'   => ':',
    '101011101110101'   => '?', '101010111010111'     => '@',
    '10111'             => 'A', '111010101'           => 'B',
    '11101011101'       => 'C', '1110101'             => 'D',
    '1'                 => 'E', '101011101'           => 'F',
    '111011101'         => 'G', '1010101'             => 'H',
    '101'               => 'I', '1011101110111'       => 'J',
    '111010111'         => 'K', '101110101'           => 'L',
    '1110111'           => 'M', '11101'               => 'N',
    '11101110111'       => 'O', '10111011101'         => 'P',
    '1110111010111'     => 'Q', '1011101'             => 'R',
    '10101'             => 'S', '111'                 => 'T',
    '1010111'           => 'U', '101010111'           => 'V',
    '101110111'         => 'W', '11101010111'         => 'X',
    '1110101110111'     => 'Y', '11101110101'         => 'Z',
    );

    # Split words
     my @words = $message.split($word_gap);
    for (0 .. @words - 1) -> $i {
        # Split characters
        my @chars = @words[$i].split($char_gap);

        for (0 .. @chars - 1) -> $j {
            # Translate the character
            $decoded_message ~= %morse{@chars[$j]};
        }

        # Add the word gap
        $decoded_message ~= ' '
            unless ($i == (@words - 1));
    }

    return $decoded_message;
}
